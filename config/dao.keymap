/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hhm: holdpref_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E      &kp R             &kp T      &kp Y      &kp U           &kp I      &kp O    &kp P     &kp LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D      &kp F             &kp G      &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS   &kp Z  &kp X  &kp C      &kp V             &kp B      &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                               &lt 2 TAB  &hhm LSHFT SPACE  &lt 1 RET  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp LC(LS(ESCAPE))  &kp N7  &kp N8     &kp N9  &kp PERCENT  &kp EQUAL  &kp PLUS          &kp MINUS          &kp STAR    &kp FSLH   &kp LSHFT
&mt LCTRL PLUS  &kp CARET           &kp N4  &kp N5     &kp N6  &kp EXCL     &kp AMPS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LPAR    &kp RPAR   &mt RCTRL MINUS
&mt LALT EQUAL  &kp N0              &kp N1  &kp N2     &kp N3  &kp AT       &kp HASH   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOLLAR  &kp UNDER  &kp RALT
                                            &lt 3 TAB  &trans  &trans       &trans     &trans            &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI LS(LCTRL)  &kp KP_SLASH     &kp F7  &kp F8  &kp F9  &kp F12    &kp C_VOL_UP  &kp HOME  &kp UP          &kp PG_UP  &kp C_PREV        &kp PRINTSCREEN
&mt LCTRL EQUAL     &kp KP_MULTIPLY  &kp F4  &kp F5  &kp F6  &kp F11    &kp C_MUTE    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp C_PLAY_PAUSE  &mt RCTRL K_APP
&kp LALT            &kp N0           &kp F1  &kp F2  &kp F3  &kp F10    &kp C_VOL_DN  &kp END   &none           &kp PG_DN  &kp C_NEXT        &kp RALT
                                             &trans  &trans  &lt 3 RET  &lt 3 ESC     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &bt BT_SEL 0     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMLOCK  &kp KP_DOT  &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &bootloader
&bt BT_CLR   &bt BT_SEL 1     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &to 5           &none       &none        &none         &none            &bt BT_SEL 2   &bt BT_CLR
&sys_reset   &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none           &none       &none        &none         &none            &bt BT_SEL 3   &sys_reset
                                               &trans           &none            &trans          &trans      &to 4        &trans
            >;
        };

        oldschool {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E    &kp R      &kp T      &kp Y     &kp U  &kp I      &kp O    &kp P     &kp N1
&kp LCTRL  &kp A  &kp S  &kp D    &kp F      &kp G      &kp H     &kp J  &kp K      &kp L    &kp SEMI  &kp N2
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V      &kp B      &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp N3
                         &kp TAB  &kp SPACE  &kp ENTER  &kp LALT  &to 0  &kp BSPC
            >;
        };

        onehand_asdf {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E      &kp R             &kp T      &kp Y      &kp U           &kp I      &kp O    &kp P     &kp LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D      &kp F             &kp G      &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS   &kp Z  &kp X  &kp C      &kp V             &kp B      &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                               &lt 7 TAB  &hhm LSHFT SPACE  &lt 6 RET  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        onehand_numbers {
            bindings = <
&kp ESC         &kp LC(LS(ESCAPE))  &kp N7  &kp N8  &kp N9  &kp PERCENT  &kp EQUAL  &kp PLUS          &kp MINUS          &kp STAR    &kp FSLH   &kp LSHFT
&mt LCTRL PLUS  &kp CARET           &kp N4  &kp N5  &kp N6  &kp EXCL     &kp AMPS   &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LPAR    &kp RPAR   &mt RCTRL MINUS
&mt LALT EQUAL  &kp N0              &kp N1  &kp N2  &kp N3  &kp AT       &kp HASH   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOLLAR  &kp UNDER  &kp RALT
                                            &to 0   &trans  &trans       &trans     &trans            &to 0
            >;
        };

        onehand_jkl {
            bindings = <
&mt LGUI RBKT       &kp P     &kp O    &kp I      &kp U  &kp Y  &kp Y      &kp U           &kp I      &kp O    &kp P     &kp LBKT
&mt LCTRL SQT       &kp SEMI  &kp L    &kp K      &kp J  &kp H  &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT BACKSLASH  &kp FSLH  &kp DOT  &kp COMMA  &kp M  &kp N  &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                                       &none      &none  &to 0  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };
    };
};
